<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic-Tac-Toe</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            padding: 50px;
        }
        .board {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-gap: 10px;
            justify-content: center;
        }
        .cell {
            width: 100px;
            height: 100px;
            background-color: #3498db;
            color: white;
            font-size: 36px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }
    </style>
</head>
<body>

    <h1>Tic-Tac-Toe</h1>
    <div class="board" id="board"></div>

    <script>
        const board = document.getElementById('board');
        let currentPlayer = 'X';
        let gameBoard = ['', '', '', '', '', '', '', '', ''];
        let gameOver = false;

        // Create cells on the board
        for (let i = 0; i < 9; i++) {
            const cell = document.createElement('div');
            cell.classList.add('cell');
            cell.setAttribute('data-id', i);
            cell.addEventListener('click', makeMove);
            board.appendChild(cell);
        }

        function makeMove() {
            const cell = this;
            const id = cell.getAttribute('data-id');

            if (gameBoard[id] === '' && !gameOver) {
                gameBoard[id] = currentPlayer;
                cell.innerText = currentPlayer;

                if (checkWinner()) {
                    setTimeout(() => alert(currentPlayer + ' wins!'), 100);
                    gameOver = true;
                    return;
                }

                currentPlayer = (currentPlayer === 'X') ? 'O' : 'X';
            }
        }

        function checkWinner() {
            const winPatterns = [
                [0, 1, 2], [3, 4, 5], [6, 7, 8],  // rows
                [0, 3, 6], [1, 4, 7], [2, 5, 8],  // columns
                [0, 4, 8], [2, 4, 6]              // diagonals
            ];

            for (let pattern of winPatterns) {
                const [a, b, c] = pattern;
                if (gameBoard[a] !== '' && gameBoard[a] === gameBoard[b] && gameBoard[a] === gameBoard[c]) {
                    return true;
                }
            }
            return false;
        }
    </script>

</body>
</html>
